directive @contentSourceMaps on QUERY

"""
About content [See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/about)
"""
type About implements Entry & _Node {
  _id: ID!
  age(locale: String): DateTime
  ageStatementPrefix(locale: String): String
  ageStatementSuffix(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  experienceMetricsCollection(limit: Int = 100, locale: String, order: [AboutExperienceMetricsCollectionOrder], preview: Boolean, skip: Int = 0, where: MetricFilter): AboutExperienceMetricsCollection
  image(locale: String, preview: Boolean): Asset
  linkedFrom(allowedLocales: [String]): AboutLinkingCollections
  locationStatement(locale: String): String
  passionStatement(locale: String): String
  professionalTitle(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type AboutCollection {
  items: [About]!
  limit: Int!
  skip: Int!
  total: Int!
}

type AboutExperienceMetricsCollection {
  items: [Metric]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum AboutExperienceMetricsCollectionOrder {
  labelPrefix_ASC
  labelPrefix_DESC
  labelSuffix_ASC
  labelSuffix_DESC
  startYear_ASC
  startYear_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

input AboutFilter {
  AND: [AboutFilter]
  OR: [AboutFilter]
  age: DateTime
  ageStatementPrefix: String
  ageStatementPrefix_contains: String
  ageStatementPrefix_exists: Boolean
  ageStatementPrefix_in: [String]
  ageStatementPrefix_not: String
  ageStatementPrefix_not_contains: String
  ageStatementPrefix_not_in: [String]
  ageStatementSuffix: String
  ageStatementSuffix_contains: String
  ageStatementSuffix_exists: Boolean
  ageStatementSuffix_in: [String]
  ageStatementSuffix_not: String
  ageStatementSuffix_not_contains: String
  ageStatementSuffix_not_in: [String]
  age_exists: Boolean
  age_gt: DateTime
  age_gte: DateTime
  age_in: [DateTime]
  age_lt: DateTime
  age_lte: DateTime
  age_not: DateTime
  age_not_in: [DateTime]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  experienceMetrics: cfMetricNestedFilter
  experienceMetricsCollection_exists: Boolean
  image_exists: Boolean
  locationStatement: String
  locationStatement_contains: String
  locationStatement_exists: Boolean
  locationStatement_in: [String]
  locationStatement_not: String
  locationStatement_not_contains: String
  locationStatement_not_in: [String]
  passionStatement: String
  passionStatement_contains: String
  passionStatement_exists: Boolean
  passionStatement_in: [String]
  passionStatement_not: String
  passionStatement_not_contains: String
  passionStatement_not_in: [String]
  professionalTitle: String
  professionalTitle_contains: String
  professionalTitle_exists: Boolean
  professionalTitle_in: [String]
  professionalTitle_not: String
  professionalTitle_not_contains: String
  professionalTitle_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type AboutLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum AboutOrder {
  ageStatementPrefix_ASC
  ageStatementPrefix_DESC
  ageStatementSuffix_ASC
  ageStatementSuffix_DESC
  age_ASC
  age_DESC
  locationStatement_ASC
  locationStatement_DESC
  passionStatement_ASC
  passionStatement_DESC
  professionalTitle_ASC
  professionalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""Represents a binary file in a space. An asset can be any file type."""
type Asset {
  contentType(locale: String): String
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  fileName(locale: String): String
  height(locale: String): Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size(locale: String): Int
  sys: Sys!
  title(locale: String): String
  url(locale: String, transform: ImageTransformOptions): String
  width(locale: String): Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  aboutCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): AboutCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  homeCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): HomeCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

type ContentfulMetadata {
  concepts: [TaxonomyConcept]!
  tags: [ContentfulTag]!
}

input ContentfulMetadataConceptsDescendantsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataConceptsFilter {
  descendants: ContentfulMetadataConceptsDescendantsFilter
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

input ContentfulMetadataFilter {
  concepts: ContentfulMetadataConceptsFilter
  concepts_exists: Boolean
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
      Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/footer)
"""
type Footer implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  footerItemCollection(limit: Int = 100, locale: String, order: [FooterFooterItemCollectionOrder], preview: Boolean, skip: Int = 0, where: FooterItemFilter): FooterFooterItemCollection
  linkedFrom(allowedLocales: [String]): FooterLinkingCollections
  sys: Sys!
}

type FooterCollection {
  items: [Footer]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterFilter {
  AND: [FooterFilter]
  OR: [FooterFilter]
  contentfulMetadata: ContentfulMetadataFilter
  footerItem: cfFooterItemNestedFilter
  footerItemCollection_exists: Boolean
  sys: SysFilter
}

type FooterFooterItemCollection {
  items: [FooterItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum FooterFooterItemCollectionOrder {
  href_ASC
  href_DESC
  label_ASC
  label_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/footerItem)
"""
type FooterItem implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  href(locale: String): String
  label(locale: String): String
  linkedFrom(allowedLocales: [String]): FooterItemLinkingCollections
  sys: Sys!
}

type FooterItemCollection {
  items: [FooterItem]!
  limit: Int!
  skip: Int!
  total: Int!
}

input FooterItemFilter {
  AND: [FooterItemFilter]
  OR: [FooterItemFilter]
  contentfulMetadata: ContentfulMetadataFilter
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  sys: SysFilter
}

type FooterItemLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  footerCollection(limit: Int = 100, locale: String, order: [FooterItemLinkingCollectionsFooterCollectionOrder], preview: Boolean, skip: Int = 0): FooterCollection
}

enum FooterItemLinkingCollectionsFooterCollectionOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum FooterItemOrder {
  href_ASC
  href_DESC
  label_ASC
  label_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type FooterLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum FooterOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""The 'HexColor' type represents color in `rgb:ffffff` string format."""
scalar HexColor

"""
Home content [See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/home)
"""
type Home implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  ctaButtonLabel(locale: String): String
  greeting(locale: String): String
  image(locale: String, preview: Boolean): Asset
  introDescription(locale: String): String
  introHeadingHighlight(locale: String): String
  introHeadingMain(locale: String): String
  introSubheading(locale: String): String
  linkedFrom(allowedLocales: [String]): HomeLinkingCollections
  sys: Sys!
}

type HomeCollection {
  items: [Home]!
  limit: Int!
  skip: Int!
  total: Int!
}

input HomeFilter {
  AND: [HomeFilter]
  OR: [HomeFilter]
  contentfulMetadata: ContentfulMetadataFilter
  ctaButtonLabel: String
  ctaButtonLabel_contains: String
  ctaButtonLabel_exists: Boolean
  ctaButtonLabel_in: [String]
  ctaButtonLabel_not: String
  ctaButtonLabel_not_contains: String
  ctaButtonLabel_not_in: [String]
  greeting: String
  greeting_contains: String
  greeting_exists: Boolean
  greeting_in: [String]
  greeting_not: String
  greeting_not_contains: String
  greeting_not_in: [String]
  image_exists: Boolean
  introDescription: String
  introDescription_contains: String
  introDescription_exists: Boolean
  introDescription_in: [String]
  introDescription_not: String
  introDescription_not_contains: String
  introDescription_not_in: [String]
  introHeadingHighlight: String
  introHeadingHighlight_contains: String
  introHeadingHighlight_exists: Boolean
  introHeadingHighlight_in: [String]
  introHeadingHighlight_not: String
  introHeadingHighlight_not_contains: String
  introHeadingHighlight_not_in: [String]
  introHeadingMain: String
  introHeadingMain_contains: String
  introHeadingMain_exists: Boolean
  introHeadingMain_in: [String]
  introHeadingMain_not: String
  introHeadingMain_not_contains: String
  introHeadingMain_not_in: [String]
  introSubheading: String
  introSubheading_contains: String
  introSubheading_exists: Boolean
  introSubheading_in: [String]
  introSubheading_not: String
  introSubheading_not_contains: String
  introSubheading_not_in: [String]
  sys: SysFilter
}

type HomeLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum HomeOrder {
  ctaButtonLabel_ASC
  ctaButtonLabel_DESC
  greeting_ASC
  greeting_DESC
  introHeadingHighlight_ASC
  introHeadingHighlight_DESC
  introHeadingMain_ASC
  introHeadingMain_DESC
  introSubheading_ASC
  introSubheading_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

enum ImageFormat {
  AVIF

  """JPG image format."""
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """PNG image format"""
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """WebP image format."""
  WEBP
}

enum ImageResizeFocus {
  """Focus the resizing on the bottom."""
  BOTTOM

  """Focus the resizing on the bottom left."""
  BOTTOM_LEFT

  """Focus the resizing on the bottom right."""
  BOTTOM_RIGHT

  """Focus the resizing on the center."""
  CENTER

  """Focus the resizing on the largest face."""
  FACE

  """Focus the resizing on the area containing all the faces."""
  FACES

  """Focus the resizing on the left."""
  LEFT

  """Focus the resizing on the right."""
  RIGHT

  """Focus the resizing on the top."""
  TOP

  """Focus the resizing on the top left."""
  TOP_LEFT

  """Focus the resizing on the top right."""
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """Resizes the image to fit into the specified dimensions."""
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """Creates a thumbnail from the image."""
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """Desired image format. Defaults to the original image format."""
  format: ImageFormat

  """Desired height in pixels. Defaults to the original image height."""
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """Desired resize focus area. Defaults to `CENTER`."""
  resizeFocus: ImageResizeFocus

  """Desired resize strategy. Defaults to `FIT`."""
  resizeStrategy: ImageResizeStrategy

  """Desired width in pixels. Defaults to the original image width."""
  width: Dimension
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/metaData)
"""
type MetaData implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): MetaDataLinkingCollections
  sys: Sys!
  title(locale: String): String
}

type MetaDataCollection {
  items: [MetaData]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MetaDataFilter {
  AND: [MetaDataFilter]
  OR: [MetaDataFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type MetaDataLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MetaDataOrder {
  description_ASC
  description_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/metric)
"""
type Metric implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  labelPrefix(locale: String): String
  labelSuffix(locale: String): String
  linkedFrom(allowedLocales: [String]): MetricLinkingCollections
  startYear(locale: String): Int
  sys: Sys!
}

type MetricCollection {
  items: [Metric]!
  limit: Int!
  skip: Int!
  total: Int!
}

input MetricFilter {
  AND: [MetricFilter]
  OR: [MetricFilter]
  contentfulMetadata: ContentfulMetadataFilter
  labelPrefix: String
  labelPrefix_contains: String
  labelPrefix_exists: Boolean
  labelPrefix_in: [String]
  labelPrefix_not: String
  labelPrefix_not_contains: String
  labelPrefix_not_in: [String]
  labelSuffix: String
  labelSuffix_contains: String
  labelSuffix_exists: Boolean
  labelSuffix_in: [String]
  labelSuffix_not: String
  labelSuffix_not_contains: String
  labelSuffix_not_in: [String]
  startYear: Int
  startYear_exists: Boolean
  startYear_gt: Int
  startYear_gte: Int
  startYear_in: [Int]
  startYear_lt: Int
  startYear_lte: Int
  startYear_not: Int
  startYear_not_in: [Int]
  sys: SysFilter
}

type MetricLinkingCollections {
  aboutCollection(limit: Int = 100, locale: String, order: [MetricLinkingCollectionsAboutCollectionOrder], preview: Boolean, skip: Int = 0): AboutCollection
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum MetricLinkingCollectionsAboutCollectionOrder {
  ageStatementPrefix_ASC
  ageStatementPrefix_DESC
  ageStatementSuffix_ASC
  ageStatementSuffix_DESC
  age_ASC
  age_DESC
  locationStatement_ASC
  locationStatement_DESC
  passionStatement_ASC
  passionStatement_DESC
  professionalTitle_ASC
  professionalTitle_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum MetricOrder {
  labelPrefix_ASC
  labelPrefix_DESC
  labelSuffix_ASC
  labelSuffix_DESC
  startYear_ASC
  startYear_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  _node(id: ID!, locale: String, preview: Boolean): _Node
  about(id: String!, locale: String, preview: Boolean): About
  aboutCollection(limit: Int = 100, locale: String, order: [AboutOrder], preview: Boolean, skip: Int = 0, where: AboutFilter): AboutCollection
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(limit: Int = 100, locale: String, order: [AssetOrder], preview: Boolean, skip: Int = 0, where: AssetFilter): AssetCollection
  entryCollection(limit: Int = 100, locale: String, order: [EntryOrder], preview: Boolean, skip: Int = 0, where: EntryFilter): EntryCollection
  footer(id: String!, locale: String, preview: Boolean): Footer
  footerCollection(limit: Int = 100, locale: String, order: [FooterOrder], preview: Boolean, skip: Int = 0, where: FooterFilter): FooterCollection
  footerItem(id: String!, locale: String, preview: Boolean): FooterItem
  footerItemCollection(limit: Int = 100, locale: String, order: [FooterItemOrder], preview: Boolean, skip: Int = 0, where: FooterItemFilter): FooterItemCollection
  home(id: String!, locale: String, preview: Boolean): Home
  homeCollection(limit: Int = 100, locale: String, order: [HomeOrder], preview: Boolean, skip: Int = 0, where: HomeFilter): HomeCollection
  metaData(id: String!, locale: String, preview: Boolean): MetaData
  metaDataCollection(limit: Int = 100, locale: String, order: [MetaDataOrder], preview: Boolean, skip: Int = 0, where: MetaDataFilter): MetaDataCollection
  metric(id: String!, locale: String, preview: Boolean): Metric
  metricCollection(limit: Int = 100, locale: String, order: [MetricOrder], preview: Boolean, skip: Int = 0, where: MetricFilter): MetricCollection
  service(id: String!, locale: String, preview: Boolean): Service
  serviceBanner(id: String!, locale: String, preview: Boolean): ServiceBanner
  serviceBannerCollection(limit: Int = 100, locale: String, order: [ServiceBannerOrder], preview: Boolean, skip: Int = 0, where: ServiceBannerFilter): ServiceBannerCollection
  serviceCollection(limit: Int = 100, locale: String, order: [ServiceOrder], preview: Boolean, skip: Int = 0, where: ServiceFilter): ServiceCollection
  services(id: String!, locale: String, preview: Boolean): Services
  servicesCollection(limit: Int = 100, locale: String, order: [ServicesOrder], preview: Boolean, skip: Int = 0, where: ServicesFilter): ServicesCollection
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/service)
"""
type Service implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  description(locale: String): String
  linkedFrom(allowedLocales: [String]): ServiceLinkingCollections
  sys: Sys!
  tags(locale: String): [String]
  title(locale: String): String
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/serviceBanner)
"""
type ServiceBanner implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ServiceBannerLinkingCollections
  services(locale: String): [String]
  sys: Sys!
}

type ServiceBannerCollection {
  items: [ServiceBanner]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ServiceBannerFilter {
  AND: [ServiceBannerFilter]
  OR: [ServiceBannerFilter]
  contentfulMetadata: ContentfulMetadataFilter
  services_contains_all: [String]
  services_contains_none: [String]
  services_contains_some: [String]
  services_exists: Boolean
  sys: SysFilter
}

type ServiceBannerLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ServiceBannerOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ServiceCollection {
  items: [Service]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ServiceFilter {
  AND: [ServiceFilter]
  OR: [ServiceFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ServiceLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
  servicesCollection(limit: Int = 100, locale: String, order: [ServiceLinkingCollectionsServicesCollectionOrder], preview: Boolean, skip: Int = 0): ServicesCollection
}

enum ServiceLinkingCollectionsServicesCollectionOrder {
  subTitleHighlight_ASC
  subTitleHighlight_DESC
  subTitleMain_ASC
  subTitleMain_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

enum ServiceOrder {
  description_ASC
  description_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/zb28mfcpbphv/content_types/services)
"""
type Services implements Entry & _Node {
  _id: ID!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ServicesLinkingCollections
  serviceEntriesCollection(limit: Int = 100, locale: String, order: [ServicesServiceEntriesCollectionOrder], preview: Boolean, skip: Int = 0, where: ServiceFilter): ServicesServiceEntriesCollection
  subTitleHighlight(locale: String): String
  subTitleMain(locale: String): String
  sys: Sys!
  title(locale: String): String
}

type ServicesCollection {
  items: [Services]!
  limit: Int!
  skip: Int!
  total: Int!
}

input ServicesFilter {
  AND: [ServicesFilter]
  OR: [ServicesFilter]
  contentfulMetadata: ContentfulMetadataFilter
  serviceEntries: cfServiceNestedFilter
  serviceEntriesCollection_exists: Boolean
  subTitleHighlight: String
  subTitleHighlight_contains: String
  subTitleHighlight_exists: Boolean
  subTitleHighlight_in: [String]
  subTitleHighlight_not: String
  subTitleHighlight_not_contains: String
  subTitleHighlight_not_in: [String]
  subTitleMain: String
  subTitleMain_contains: String
  subTitleMain_exists: Boolean
  subTitleMain_in: [String]
  subTitleMain_not: String
  subTitleMain_not_contains: String
  subTitleMain_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type ServicesLinkingCollections {
  entryCollection(limit: Int = 100, locale: String, preview: Boolean, skip: Int = 0): EntryCollection
}

enum ServicesOrder {
  subTitleHighlight_ASC
  subTitleHighlight_DESC
  subTitleMain_ASC
  subTitleMain_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type ServicesServiceEntriesCollection {
  items: [Service]!
  limit: Int!
  skip: Int!
  total: Int!
}

enum ServicesServiceEntriesCollectionOrder {
  description_ASC
  description_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!

  """The locale that was requested."""
  locale: String
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

"""
Represents a tag entity for finding and organizing content easily.
        Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-concepts
"""
type TaxonomyConcept {
  id: String
}

interface _Node {
  _id: ID!
}

input cfFooterItemNestedFilter {
  AND: [cfFooterItemNestedFilter]
  OR: [cfFooterItemNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  href: String
  href_contains: String
  href_exists: Boolean
  href_in: [String]
  href_not: String
  href_not_contains: String
  href_not_in: [String]
  label: String
  label_contains: String
  label_exists: Boolean
  label_in: [String]
  label_not: String
  label_not_contains: String
  label_not_in: [String]
  sys: SysFilter
}

input cfMetricNestedFilter {
  AND: [cfMetricNestedFilter]
  OR: [cfMetricNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  labelPrefix: String
  labelPrefix_contains: String
  labelPrefix_exists: Boolean
  labelPrefix_in: [String]
  labelPrefix_not: String
  labelPrefix_not_contains: String
  labelPrefix_not_in: [String]
  labelSuffix: String
  labelSuffix_contains: String
  labelSuffix_exists: Boolean
  labelSuffix_in: [String]
  labelSuffix_not: String
  labelSuffix_not_contains: String
  labelSuffix_not_in: [String]
  startYear: Int
  startYear_exists: Boolean
  startYear_gt: Int
  startYear_gte: Int
  startYear_in: [Int]
  startYear_lt: Int
  startYear_lte: Int
  startYear_not: Int
  startYear_not_in: [Int]
  sys: SysFilter
}

input cfServiceNestedFilter {
  AND: [cfServiceNestedFilter]
  OR: [cfServiceNestedFilter]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  sys: SysFilter
  tags_contains_all: [String]
  tags_contains_none: [String]
  tags_contains_some: [String]
  tags_exists: Boolean
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}